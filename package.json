{
  "name": "@fcrick/itoa",
  "version": "2.0.0",
  "description": "Minimal i32 itoa in web assembly",
  "main": "lib/index.js",
  "type": "module",
  "files": [
    "assembly/index.d.ts",
    "lib/index.js",
    "lib/index.d.ts",
    "lib/optimized.wasm.js"
  ],
  "scripts": {
    "test": "node ./lib/tests/index.js",
    "asbuild:untouched": "asc assembly/index.ts -b build/untouched.wasm -t build/untouched.wat --importMemory --sourceMap --debug --runtime none",
    "asbuild:optimized": "asc assembly/index.ts -b build/optimized.wasm -t build/optimized.wat --importMemory --sourceMap --optimize --runtime none",
    "asbuild": "npm run asbuild:untouched && npm run asbuild:optimized",
    "build:wasmtobase64": "node -e 'fs.writeFileSync(`./src/optimized.wasm.ts`, `export default Buffer.from(\"${fs.readFileSync(\"./build/optimized.wasm\").toString(\"base64\")}\", \"base64\")`)'",
    "build:astypes": "tsc --build ./assembly/tsconfig.json",
    "build:src": "tsc --build ./src/tsconfig.json",
    "build": "npm run asbuild:optimized && npm run build:wasmtobase64 && npm run build:src && npm run build:astypes",
    "postinstall": "npm run build"
  },
  "author": "Francis Crick <fcrick@gmail.com>",
  "license": "ISC",
  "devDependencies": {
    "@types/node": "^14.0.19",
    "assemblyscript": "^0.13.3",
    "typescript": "^3.9.6"
  }
}
